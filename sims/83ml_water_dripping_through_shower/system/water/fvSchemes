/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{

    default         none;

    div(phi,U)      Gauss upwind;
    div(phi,K)      Gauss linear;
    div(phi,h)      Gauss upwind;
    div(phi,k)      Gauss upwind;
    div(phi,epsilon) Gauss upwind;
    div(phi,R)      Gauss upwind;
    div(R)          Gauss linear;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
/*    
    // copied from coolingCylinder2D
    div(phi,omega)      $turbulence;

    // copied from coolingCylinder2D
    
    default             none;

    div(phi,U)          Gauss linearUpwind limited;

    turbulence          Gauss limitedLinear 1;
    div(phi,k)          $turbulence;
    div(phi,omega)      $turbulence;
    div(phi,e)          $turbulence;
    div(phi,K)          $turbulence;
    div(phi,h)          $turbulence;
    div(phi,(p|rho))    $turbulence;

    div(((rho*nuEff)*dev2(T(grad(U)))))    Gauss linear;    
*/    
}

laplacianSchemes
{
    default        Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

wallDist
{
    method meshWave;
}

// ************************************************************************* //
